<html>
<head>
<title>Online DNA encrypt | decrypt</title>
</head>
<!-- <body>
<script type="text/javascript" src="encrypt.js"></script>
<script type="text/javascript" src="decrypt.js"></script> -->

		<div class="title">Message(English Only!)</div>
    	<textarea name='message' id='msg_source' value="this is a example" class="text_source"
        style="width:250px; height:80px;">This is an example.</textarea>
    <br>
    <br>
		<div class="title">Input you key</div>
			<textarea name='input' id='pwd' value="" class="text_source" style="width:250px; height:60px;"  >No input to generate a random one!</textarea>
    <br>
        <button  onclick="encrypt()" >Encrypt </button>
        <button  onclick="decrypt()" >Decrypt </button>
    <br>
    <br>
			<div class="title">Result</div>
			<textarea name='cipher' id='encrypt_result' value="" style="width:250px; height:80px;" readonly="OK"></textarea>
<div id="footer">
	<p class="wrapper">
		copyright @ Honghuahu 2018
	</p>
</div>

<script>
function encrypt() {
  var input=document.getElementById("msg_source");
  var pwd=document.getElementById("pwd");
  var final=document.getElementById("encrypt_result");
    final.value=" ";
if ((pwd.value === "No input to generate a random one!") || isnull(pwd.value))
{
  pwd.value=gen_random_key();
  alert("No key input and get a random key :  "+String(pwd.value));
}
var str_bin = str2bin(input.value);
var dna_str = bin2dna(str_bin);
var key_ = random_parameter(pwd.value, 1);
var random_dna_str = gen_random_dna_str(key_, dna_str.length * 2);
var and_dna = "";
for (var i=0;i<dna_str.length;i++){
  and_dna += dna_and(dna_str[i], random_dna_str[i]);
}
var complement_dna = "";
for (var i=0;i<and_dna.length;i++){
    complement_dna += dna_complement(and_dna[i]);
}
final.value=complement_dna;
};

function decrypt() {
  var input=document.getElementById("msg_source");
  var pwd=document.getElementById("pwd");
  var final=document.getElementById("encrypt_result");
    final.value=" ";
if ((pwd.value === "No input to generate a random one!") || isnull(pwd.value))
{
  alert("Please input the key!")
}
else
{
  var s_complement = "";
  var key_ = random_parameter(pwd.value, 1);
  for (var i=0;i<input.value.length;i++)
  {
    s_complement += dna_complement(input.value[i]);
  }
  var random_dna_str = gen_random_dna_str(key_, s_complement.length*2);
  var and_dna = ""
  for (var i=0;i<s_complement.length;i++)
  {
    and_dna += dna_and(s_complement[i], random_dna_str[i]);
  }
  var bin_str = dna2bin(and_dna);
  var decrypt_res = bin2str(bin_str);
    console.log(decrypt_res)
  final.value=decrypt_res;
}
};

//is null
function isnull(val) {
        var str = val.replace(/(^\s*)|(\s*$)/g, '');//把val首尾的空格去掉。

        if (str == '' || str == undefined || str == null) {//输入框中输入空格也为空
            return 1;
        } else {
            return 0;
        }
    }
	
//string to bin
function str2bin(str){
    res = "";
    str=String(str);
    for (var i=0;i<str.length;i++)
    {
      var temp=str[i];
      var bin=temp.charCodeAt().toString(2);
        if (bin.length===6){
            bin="00"+bin;
        }
        else{
            bin="0"+bin;
        }
      res+=bin;
    }
    return res;
  }

//bin to string
function bin2str(bin){
  var res="";
    bin=String(bin);
  for (var i=0;i<bin.length;i+=8){
    var temp=bin.substring(i,i+8);
    res+=String.fromCharCode(parseInt(Number(temp),2));
  }
  return res;
}

//bin to dna
function bin2dna(bin) {
  var dna_bin = new Map([["00","A"],["01","C"],["10","G"],["11","T"]]);
  var index=0;
  var dna_str="";
  while(index<bin.length){
      dna_str+=dna_bin.get(String(bin.substring(index,index+2)));
                          index+=2;
    }
  return dna_str;
}

//dna to bin
function dna2bin(dna) {
  var bin_dna = new Map([["A","00"],["C","01"],["G","10"],["T","11"]]);
  var index=0;
  var bin_str="";
  while(index<dna.length){
      bin_str+=bin_dna.get(dna[index]);
      index+=1;
  }
  return bin_str;
}

//gengrate parameter for chaos matrix
function random_parameter(key,dim) {
  key=String(key);
  res="";
  for (var i=0;i<key.length;i++)
  {
    var temp=key[i];
    var bin=temp.charCodeAt().toString(2);
    bin="0"+bin;
    res+=bin;}
    key=Number(res);
    var seed = key;
    seed = (seed * 9301 + 49297) % 233280;
    var x_0 = seed / 233280.0;
    var seed = Math.abs(Number((10-key)*key));
    seed = (seed * 9301 + 49297) % 233280;
    var r = seed *4 / 233280.0;
    return [r,x_0]; 
 }

//generate random dna string
function gen_random_dna_str(key,len) {
  var new_dna="";
  var r =key[0];
  var x_i=key[1]*1000;
  for (var i=0;i<len;i++){
    x_i = r * x_i * (1000 - x_i)/1000;
    xi_str = String(x_i);
    if (xi_str.length>6)
    {
      var temp=xi_str[4];
        if (temp>"5"){
          new_dna+="1";
      }
        else{
        new_dna+="0"
      }
      }
    else{
          new_dna+="0";
        }
    }
  new_dna=bin2dna(new_dna);
  return new_dna;
}

//dna and
function dna_and(s1,s2) {
  var res="";
  if ((s1 === "T" && s2 === "T") || (s2 === "T" && s1 === "T"))
      {res = "C";}
  else if ((s1 === "T" && s2 === "A") || (s2 === "T" && s1 === "A"))
      {res = "G";}
  else if ((s1 === "T" && s2 === "C") || (s2 === "T" && s1 === "C"))
      {res = "T";}
  else if ((s1 === "T" && s2 === "G") || (s2 === "T" && s1 === "G"))
      {res = "A";}
  else if ((s1 === "A" && s2 === "A") || (s2 === "A" && s1 === "A"))
      {res = "C";}
  else if ((s1 === "C" && s2 === "A") || (s2 === "C" && s1 === "A"))
      {res = "A";}
  else if ((s1 === "G" && s2 === "A") || (s2 === "G" && s1 === "A"))
      {res = "T";}
  else if ((s1 === "C" && s2 === "C") || (s2 === "C" && s1 === "C"))
      {res = "C";}
  else if ((s1 === "G" && s2 === "C") || (s2 === "G" && s1 === "C"))
      {res = "G";}
  else
      {res = "C";}
  return res;
}

//dna complement
function dna_complement(s) {
  res = "";
  if (s === "A")
    {res = "T";}
  else if (s === "T")
    {res = "A";}
  else if (s === "C")
    {res = "G";}
  else
    {res = "C";}
  return res;
}

//no key and gengrate Key
function gen_random_key() {
    var alpha="qwertyuiopasdfghjklzxcvbnm0123456789";
    var res="";
    while(res.length<7){
        var rnd=String(Math.ceil(Math.random()*10000));
        var temp=Number(rnd.substring(2,4));
        if ((0<=temp) && (temp<36)){
            res+=alpha[temp];
        }
    }
  return res;
}
</script>
</body>
</html>
